services:

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    # ports:
    #   - "6379:6379"


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend
    # ports:
    #   - "8000:8000"
    environment:
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/mydb
    volumes:
      ../logs/backend:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./frontend/dist:/usr/share/nginx/html   # vite build 결과물
      - ../logs/nginx:/var/log/nginx  # 로그
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'" #  주기적으로 설정 리로드

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
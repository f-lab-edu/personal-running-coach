"""activity_id_seq

Revision ID: 396b3c5e708b
Revises: f27a055abae5
Create Date: 2025-10-13 12:30:22.758662

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '396b3c5e708b'
down_revision: Union[str, Sequence[str], None] = 'f27a055abae5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # 0. 기존 중복 제거 (provider + activity_id)
    op.execute("""
        DELETE FROM trainsession
        WHERE id IN (
            SELECT id FROM (
                SELECT id,
                       ROW_NUMBER() OVER (PARTITION BY provider, activity_id ORDER BY created_at) AS rn
                FROM trainsession
                WHERE activity_id IS NOT NULL
            ) t
            WHERE t.rn > 1
        );
    """)

    # 1. 시퀀스 생성 (local activity_id 전용)
    op.execute("""
        CREATE SEQUENCE IF NOT EXISTS local_activity_id_seq START 1;
    """)

    # 2. 기존 NULL 값 채우기 (provider = 'local'만)
    op.execute("""
        UPDATE trainsession
        SET activity_id = nextval('local_activity_id_seq')
        WHERE provider = 'local' AND activity_id IS NULL;
    """)

    # 3. 컬럼 DEFAULT 설정
    op.execute("""
        ALTER TABLE trainsession
        ALTER COLUMN activity_id SET DEFAULT nextval('local_activity_id_seq');
    """)

    op.create_unique_constraint('uq_provider_activity', 'trainsession', ['provider', 'activity_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_provider_activity', 'trainsession', type_='unique')

    # 컬럼 DEFAULT 제거
    op.execute("""
        ALTER TABLE trainsession ALTER COLUMN activity_id DROP DEFAULT;
    """)

    # 시퀀스 제거
    op.execute("DROP SEQUENCE IF EXISTS local_activity_id_seq;")

    # ### end Alembic commands ###
